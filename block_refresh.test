<?php

/**
 * Tests functionality of the block refresh module.
 */
class BlockRefreshSettingsTestCase extends DrupalWebTestCase {

  protected $privileged_user;

  public static function getInfo() {
    // Note: getInfo() strings are not translated with t().
    return array(
      'name' => 'Block Refresh Block config settings form',
      'description' => 'Ensure block refresh settings appear on the block config page.',
      'group' => 'Block Refresh',
    );
  }

  public function setUp() {
    // Enable any modules required for the test. This should be an array of
    // module names.
    parent::setUp(array('block_refresh', 'block_refresh_demo'));
    // Create and log in our privileged user.
    $this->privileged_user = $this->drupalCreateUser(array(
      'administer blocks',
    ));
    $this->drupalLogin($this->privileged_user);

    // Define the existing regions
    $this->regions = array();
    $this->regions[] = 'header';
    $this->regions[] = 'sidebar_first';
    $this->regions[] = 'content';
    $this->regions[] = 'sidebar_second';
    $this->regions[] = 'footer';
  }

  //Check if the block refresh elements appear on the configure form.
  public function testBlockRefreshConfigureForm() {
    $this->drupalGet('admin/structure/block/manage/block_refresh_demo/block_refresh_demo/configure');
    $this->assertText('Block refresh settings');
    $this->assertText('Enable block to be refreshed automatically');
    $this->assertText('Block refresh timer');
    $this->assertText('Enable block to be refreshed manually');
    $this->assertText('Enable block to be refreshed on page load');
    $this->assertText('Send page path arguments to block');
    $this->assertText('Enable block to be used in Panels');
    $this->assertText('Bypass Drupal page cache');
    $this->assertText('External cache max age');
  }

}
